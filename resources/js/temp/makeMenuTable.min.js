jQuery.fn.extend({
	makeMenuTable : function(setting) {
		var option = {
			json : null,
			header : null,
			colSize : null,
			menuDefault : null,
			path_prefix : '',
			pathKey : 'path',
			number : true,
			numberStr : '번호',
			target : '_blank',
			update : null,
		}
		$.extend(true, option, setting);

		var _this = this,
			html = '',
			thead = option.header,
			colSize = option.colSize,
			update = option.update,
			json = _this.merge(option),
			completePage = 0;

		$('.page .total').text(json.length); // 페이지 수
		$('.update span').text(update); // 업데이트 날짜

		html += '<table>';

		var caption = '퍼블리싱 작성목록의 ';
		for (var i in thead) {
			if (i != 0) caption += ', ';
			caption += thead[i];
		}
		html += '<caption>' + caption + ' 정보를 제공합니다.</caption>';

		html += '<colgroup>';
		for (var i in colSize) {
			html += '<col width="' + colSize[i]+ '"/>';
		}
		html += '</colgroup>';

		html += '<thead>';
		if (option.number) html += '<th scope="col">'+option.numberStr+'</th>';
		for (var i in thead) {
			html += '<th scope="col">'+thead[i]+'</th>';
		}
		html += '</thead><tbody>';

		for (var i in json) {
			if (json[i]['type'] != "" && i != 0) html += '<tr><td colspan="'+(Object.keys(json[i]).length+1)+'" class="boderTd"></td></tr>'; // 구분선
			else if (json[i]['depth1'] != "" && i != 0) html += '<tr><td colspan="'+(Object.keys(json[i]).length+1)+'" class="boderTd"></td></tr>'; // 구분선

			var datePattern = /^(19|20)\d{2}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[0-1])$/; 

			if (!datePattern.test(json[i]['complete'])) {html += '<tr class="incomplete">';}
			else {
				html += '<tr>';
				completePage++;
			}

			if (option.number) html += '<th  scope="row" class="num">'+(parseInt(i)+1)+'</th>';

			for (var j in Object.keys(json[i])) {
				var key = Object.keys(json[i])[j],
					innerHtml = json[i][key];

				if (key == option.pathKey) {
					innerHtml = '<a href="'+option.path_prefix+innerHtml+'" title="'+option.path_prefix+innerHtml+'" target="'+option.target+'">'+option.path_prefix+innerHtml+'</a>';

					if (json[i]['complete'] == '') {innerHtml = '-';}
					if (json[i][key] == '') {innerHtml = '-';}
				}

				if (update == innerHtml && (key == 'complete' || key == 'mod')) {
					innerHtml = '<span>' + innerHtml + '</span>';
				}

				html += '<td class="'+key+'">'+innerHtml+'</td>';
			}
			html += '</tr>';
		}

		html += '<tr><td colspan="'+(Object.keys(json[i]).length+1)+'" class="boderTd"></td></tr>';
		html += '</tbody></table>';
		$(this).html(html);
		$('.page .cnt').text(completePage); // 완료 페이지수
	},
	merge : function(option) {
		var _this = this,
			mergeArr = [];
		for (var i in option.json) {
			var menuDefault = option.menuDefault;
			var mergeJson = $.extend({}, menuDefault, option.json[i]);
			mergeArr.push(mergeJson);
		}
		return mergeArr;
	}
});